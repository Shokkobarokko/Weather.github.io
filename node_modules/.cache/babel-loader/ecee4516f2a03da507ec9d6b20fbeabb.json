{"ast":null,"code":"var _jsxFileName = \"/Users/avetis/Downloads/react tutorial/my-app/src/App.js\";\nimport React from \"react\";\nimport Info from \"./components/info\";\nimport Form from \"./components/form\";\nimport Weather from \"./components/Weather\";\nconst API_KEY = \"144c9dd7fbecaa89ba3059c9c7bcea88\";\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      temp: undefined,\n      city: undefined,\n      country: undefined,\n      pressure: undefined,\n      sunrise: undefined,\n      sunset: undefined,\n      error: undefined\n    };\n\n    this.gettingWeather = async e => {\n      e.preventDefault();\n      const city = e.target.elements.city.value;\n\n      if (city) {\n        const api_url = await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${API_KEY}&units=metric`);\n        const data = await api_url.json();\n        var sunset = data.sys.sunset;\n        var date = new Date();\n        date.setTime(sunset);\n        var sunset_date = date.getHours() + \":\" + date.getMinutes() + \":\" + date.getSeconds();\n        this.setState({\n          temp: data.main.temp,\n          city: data.name,\n          country: data.sys.country,\n          sunrise: data.sys.sunrise,\n          sunset: sunset_date,\n          error: \"\"\n        });\n      }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 18\n      }\n    }, /*#__PURE__*/React.createElement(Info, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Form, {\n      weatherMethod: this.gettingWeather,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }\n    }), \" \", /*#__PURE__*/React.createElement(Weather, {\n      temp: this.state.temp,\n      city: this.state.city,\n      country: this.state.country,\n      sunrise: this.state.sunrise,\n      sunset: this.state.sunset,\n      error: this.state.error,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/avetis/Downloads/react tutorial/my-app/src/App.js"],"names":["React","Info","Form","Weather","API_KEY","App","Component","state","temp","undefined","city","country","pressure","sunrise","sunset","error","gettingWeather","e","preventDefault","target","elements","value","api_url","fetch","data","json","sys","date","Date","setTime","sunset_date","getHours","getMinutes","getSeconds","setState","main","name","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AAEA,MAAMC,OAAO,GAAG,kCAAhB;;AAGA,MAAMC,GAAN,SAAkBL,KAAK,CAACM,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAGlCC,KAHkC,GAG1B;AACJC,MAAAA,IAAI,EAAEC,SADF;AAEJC,MAAAA,IAAI,EAAED,SAFF;AAGJE,MAAAA,OAAO,EAACF,SAHJ;AAIJG,MAAAA,QAAQ,EAACH,SAJL;AAKJI,MAAAA,OAAO,EAAEJ,SALL;AAMJK,MAAAA,MAAM,EAAEL,SANJ;AAOJM,MAAAA,KAAK,EAAEN;AAPH,KAH0B;;AAAA,SAc9BO,cAd8B,GAcb,MAAMC,CAAN,IAAY;AACzBA,MAAAA,CAAC,CAACC,cAAF;AAEA,YAAMR,IAAI,GAAGO,CAAC,CAACE,MAAF,CAASC,QAAT,CAAkBV,IAAlB,CAAuBW,KAApC;;AAIA,UAAGX,IAAH,EAAS;AACJ,cAAMY,OAAO,GAAG,MAAMC,KAAK,CAAE,qDAAoDb,IAAK,UAASN,OAAQ,eAA5E,CAA3B;AACL,cAAMoB,IAAI,GAAG,MAAMF,OAAO,CAACG,IAAR,EAAnB;AAEA,YAAIX,MAAM,GAAGU,IAAI,CAACE,GAAL,CAASZ,MAAtB;AACA,YAAIa,IAAI,GAAG,IAAIC,IAAJ,EAAX;AACAD,QAAAA,IAAI,CAACE,OAAL,CAAaf,MAAb;AACA,YAAIgB,WAAW,GAAGH,IAAI,CAACI,QAAL,KAAkB,GAAlB,GAAwBJ,IAAI,CAACK,UAAL,EAAxB,GAA4C,GAA5C,GAAkDL,IAAI,CAACM,UAAL,EAApE;AAIA,aAAKC,QAAL,CAAc;AACV1B,UAAAA,IAAI,EAAEgB,IAAI,CAACW,IAAL,CAAU3B,IADN;AAEVE,UAAAA,IAAI,EAAEc,IAAI,CAACY,IAFD;AAGVzB,UAAAA,OAAO,EAAEa,IAAI,CAACE,GAAL,CAASf,OAHR;AAIVE,UAAAA,OAAO,EAAEW,IAAI,CAACE,GAAL,CAASb,OAJR;AAKVC,UAAAA,MAAM,EAAGgB,WALC;AAMVf,UAAAA,KAAK,EAAE;AANG,SAAd;AAQH;AAEA,KA1C6B;AAAA;;AA4C9BsB,EAAAA,MAAM,GAAG;AACL,wBAAS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEL,oBACA,IADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFK,eAIL,oBACA,IADA;AACK,MAAA,aAAa,EAAK,KAAKrB,cAD5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJK,oBAMD,oBACJ,OADI;AAEJ,MAAA,IAAI,EAAE,KAAKT,KAAL,CAAWC,IAFb;AAGJ,MAAA,IAAI,EAAE,KAAKD,KAAL,CAAWG,IAHb;AAIJ,MAAA,OAAO,EAAE,KAAKH,KAAL,CAAWI,OAJhB;AAKJ,MAAA,OAAO,EAAE,KAAKJ,KAAL,CAAWM,OALhB;AAMJ,MAAA,MAAM,EAAE,KAAKN,KAAL,CAAWO,MANf;AAOJ,MAAA,KAAK,EAAE,KAAKP,KAAL,CAAWQ,KAPd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANC,CAAT;AAoBH;;AAjE6B;;AAoElC,eAAeV,GAAf","sourcesContent":["import React from \"react\";\nimport Info from \"./components/info\";\nimport Form from \"./components/form\";\nimport Weather from \"./components/Weather\";\n\nconst API_KEY = \"144c9dd7fbecaa89ba3059c9c7bcea88\";\n\n\nclass App extends React.Component {\n\n\nstate = {\n    temp: undefined,\n    city: undefined,\n    country:undefined,\n    pressure:undefined,\n    sunrise: undefined,\n    sunset: undefined,\n    error: undefined\n}\n\n\n    gettingWeather = async(e) => {\n        e.preventDefault();\n\n        const city = e.target.elements.city.value;\n\n        \n       \n        if(city) {\n             const api_url = await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${API_KEY}&units=metric`);\n        const data = await api_url.json();\n\n        var sunset = data.sys.sunset;\n        var date = new Date();\n        date.setTime(sunset);\n        var sunset_date = date.getHours() + \":\" + date.getMinutes() + \":\" + date.getSeconds();\n        \n\n\n        this.setState({\n            temp: data.main.temp,\n            city: data.name,\n            country: data.sys.country,\n            sunrise: data.sys.sunrise,\n            sunset : sunset_date,\n            error: \"\"\n        });\n    }\n\n    }\n\n    render() {\n        return ( <\n            div >\n            <\n            Info / >\n            <\n            Form weatherMethod = { this.gettingWeather }\n            / > <\n            Weather\n            temp={this.state.temp}\n            city={this.state.city}\n            country={this.state.country}\n            sunrise={this.state.sunrise}\n            sunset={this.state.sunset}\n            error={this.state.error}\n             / >\n          \n            <\n            /\n            div >\n        )\n    }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}